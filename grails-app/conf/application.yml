info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
grails:
  mime:
    disable:
      accept:
        header:
          userAgents:
          - Gecko
          - WebKit
          - Presto
          - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
      - text/html
      - application/xhtml+xml
      js: text/javascript
      json:
      - application/json
      - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
      - application/hal+json
      - application/hal+xml
      xml:
      - text/xml
      - application/xml
  views:
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
    default:
      codec: html
  codegen:
    defaultPackage: net.codebuilders.mybusiness
  profile: web-plugin
dataSource:
  driverClassName: org.postgresql.Driver
  username: postgres
  password: ''
  pooled: true
  jmxExport: true
environments:
  development:
    dataSource:
      dbCreate: create-drop
      # so we can use testcontainers for bootRun
      # url: jdbc:postgresql://localhost:5432/devDb
      url: jdbc:tc:postgresql:12:///postgres
      driverClassName: org.testcontainers.jdbc.ContainerDatabaseDriver
  test:
    dataSource:
      # so we can use testcontainers for bootRun -Dgrails.env=test
      # dbCreate: update
      # url: jdbc:postgresql://localhost:5432/testDb
    dbCreate: create-drop
    url: jdbc:tc:postgresql:12:///postgres
    driverClassName: org.testcontainers.jdbc.ContainerDatabaseDriver
  production:
    dataSource:
      dbCreate: none
      url: jdbc:postgresql://localhost:5432/postgres
hibernate:
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false
quartz.autoStartup: true
